services:
    app:
        build: .
        ports:
            - 8001:8001
        volumes:
            - .:/app/
        env_file:
            - ./.env
        environment:
            - POSTGRES_HOST=db
        depends_on:
            db:
                condition: service_healthy
        restart: always
        networks:
            - backend_videos

    db:
        image: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        expose:
            - 5432
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_DB=${POSTGRES_DB}
        env_file:
            - ./.env
        restart: always
        networks:
            - backend_videos
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    postgres_data:

networks:
    backend_videos:
